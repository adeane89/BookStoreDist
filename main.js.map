{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/avatar.service.ts","webpack:///./src/app/book-model.ts","webpack:///./src/app/book/book.component.css","webpack:///./src/app/book/book.component.html","webpack:///./src/app/book/book.component.ts","webpack:///./src/app/cart-model.ts","webpack:///./src/app/cart/cart.component.css","webpack:///./src/app/cart/cart.component.html","webpack:///./src/app/cart/cart.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/not-found/not-found.component.css","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/app/reviews/reviews.component.css","webpack:///./src/app/reviews/reviews.component.html","webpack:///./src/app/reviews/reviews.component.ts","webpack:///./src/app/tabs/tabs.component.css","webpack:///./src/app/tabs/tabs.component.html","webpack:///./src/app/tabs/tabs.component.ts","webpack:///./src/app/wave.pipe.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar [cart]='cart'></app-navbar>\\n<div style=\\\"font-family: Arial, sans-serif; color: lightseagreen\\\">\\n    <h1>{{title}}</h1>\\n</div>\\n    <router-outlet></router-outlet>\\n<footer>\\n    <p>&copy; {{year}}</p>\\n</footer>\\n\"","import { Component } from '@angular/core';\n\nimport {CartModel} from './cart-model';\n\nimport {CartItemModel} from './cart-item-model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  year = new Date().getFullYear();\n\ncart: CartModel = {\n    items: [],\n    totalquantity: 0,\n    totalprice: 0\n    };\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { BookComponent } from './book/book.component';\nimport { WavePipe } from './wave.pipe';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { TabsComponent } from './tabs/tabs.component';\nimport { ReviewsComponent } from './reviews/reviews.component';\n\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CartComponent } from './cart/cart.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\n\nconst appRoutes: Routes= [\n    {path: '', redirectTo: 'home', pathMatch: 'full'},\n    {path: 'home', component: HomeComponent},\n    {path: 'cart', component: CartComponent},\n    { path: '**', component: NotFoundComponent }\n]\n //every route goes to the home component\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    BookComponent,\n    WavePipe,\n    NavbarComponent,\n    TabsComponent,\n    ReviewsComponent,\n    CartComponent,\n    NotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n      FormsModule,\n      HttpClientModule,\n      RouterModule.forRoot(\n\t\t  appRoutes,\n      \t\t{ enableTracing: true } // <-- debugging purposes only\n\t  )\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Md5 } from 'ts-md5'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AvatarService {\n\n  constructor() {}\n    getAvatar (email:string) {\n        //return \"https://2.gravatar.com/avatar/\" +Md5.hashStr(email);\n        return \"https://api.adorable.io/avatars/400\" +Md5.hashStr(email);\n    }\n}\n","import { ReviewModel } from './review-model';\n\nexport class BookModel {\n    id: number;\n    name: string;\n    price: number;\n    description: string;\n    fullImagePath: string;\n    author: string;\n    inventory: number;\n    formats: string[];\n    reviews?: ReviewModel[];\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\" style=\\\"width: 24rem; margin-bottom: 15px;\\\">\\n  <img class=\\\"card-img-top img mx-auto\\\" src=\\\"{{getFullImagePath()}}\\\" alt=\\\"{{book.name}}\\\">\\n  <div class=\\\"card-body\\\">\\n      <app-tabs [book]=\\\"book\\\"></app-tabs>\\n      <h5 class =\\\"card-title\\\">{{book.name}}</h5>\\n        <p class=\\\"card-text author\\\">By: {{book.author}}</p>\\n        <p class=\\\"card-text\\\">{{book.price | currency}}</p>\\n  </div>\\n    <!--{{book.formats}}-->\\n    <select class = \\\"form-control\\\" [(ngModel)] = \\\"selectedFormat\\\">\\n        <option *ngFor=\\\"let format of book.formats\\\">{{format}}</option>\\n    </select>\\n    <button *ngIf=\\\"book.inventory > 0\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"addToCart()\\\">Add to Cart</button>\\n    <button *ngIf=\\\"book.inventory <= 0\\\" class=\\\"btn btn-danger\\\" disabled>Sold Out</button>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { BookModel } from '../book-model';\n\nimport { CartModel } from '../cart-model';\nimport { CartItemModel } from '../cart-item-model';\n\n@Component({\n  selector: 'app-book',\n  templateUrl: './book.component.html',\n  styleUrls: ['./book.component.css']\n})\n\nexport class BookComponent implements OnInit {\n    @Input()\n    book: BookModel;\n\n    @Input()\n    cart: CartModel;\n\n    selectedFormat: string;\n\n    getFullImagePath(){\n        if(this.selectedFormat === 'movie') {\n            let image : string[];\n            image = this.book.fullImagePath.split('.');\n            return \".\" + image[1] + '-movie.' + image[2];\n            } else{\n                return this.book.fullImagePath;\n            }\n    }\n\n\n    constructor() { }\n    ngOnInit() {\n        this.selectedFormat = this.book.formats[0];\n    }\n    addToCart() {\n        this.book.inventory = this.book.inventory - 1;\n        if (this.book.inventory <= 0) {\n            this.book.name = this.book.name + '[SOLD OUT]';\n        }\n\n        let existingItem: CartItemModel;\n\t\texistingItem = this.cart.items.find(x => x.bookid == this.book.id);\n\n\t\tif(!existingItem) {\n\t\t\tthis.cart.items.push({ bookid: this.book.id, name: this.book.name, quantity: 1, unitprice: this.book.price })\n\t\t} else {\n\t\t\texistingItem.quantity = existingItem.quantity + 1;\n\t\t}\n\n\t\tthis.cart.totalquantity = this.cart.totalquantity + 1;\n\t\tthis.cart.totalprice = this.cart.totalprice + this.book.price;\n    }\n}\n","import { CartItemModel } from './cart-item-model';\n\nexport class CartModel {\n    items: CartItemModel[];\n    totalquantity: number;\n    totalprice: number;\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  cart works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"card-deck\\\">\\n  <app-book  [cart] = \\\"cart\\\" [book]=\\\"g\\\" *ngFor=\\\"let g of homeBook\\\"></app-book>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { BookModel } from '../book-model';\n\nimport {CartModel} from '../cart-model';\nimport {CartItemModel} from '../cart-item-model';\nimport {HttpClient, HttpHeaders } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n    @Input()\n    cart: CartModel;\n    homeBook: BookModel[];\n    constructor(private httpClient: HttpClient) { }\n    ngOnInit() {\n         this.httpClient.get<BookModel[]>('./assets/book.json').subscribe((results) => {this.homeBook = results});\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar sticky-top navbar-expand-lg navbar-secondary bg-secondary\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\" style=\\\"color: mediumseagreen; font-size: large\\\">Harry Potter Store</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link text-white\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n         <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link text-white\\\" routerLink=\\\"/cart\\\" routerLinkActive=\\\"active\\\">Cart<span class=\\\"badge badge\\\"> {{cart.totalquantity}}</span>\\n            </a>\\n        </li>\\n      <li class=\\\"nav-item dropdown  text-white\\\">\\n        <a class=\\\"nav-link dropdown-toggle  text-white\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\">\\n          Dropdown\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" href=\\\"/action\\\">Action</a>\\n          <a class=\\\"dropdown-item\\\" href=\\\"/other-action\\\">Another action</a>\\n          <div class=\\\"dropdown-divider\\\"></div>\\n            <a class=\\\"dropdown-item\\\" href=\\\"/something-else\\\">Something else here</a>\\n        </div>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link text-white disabled\\\" href=\\\"#\\\">Disabled</a>\\n      </li>\\n    </ul>\\n    <form class=\\\"form-inline my-2 my-lg-0\\\">\\n    </form>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { CartModel } from '../cart-model';\nimport { CartItemModel } from '../cart-item-model';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n    @Input()\n    cart: CartModel;\n  constructor() { }\n  ngOnInit() {\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  not-found works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!--Existing Reviews-->\\n<!--Existing Reviews-->\\n<h6>Reviews</h6>\\n<div *ngFor=\\\"let review of book.reviews\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-2\\\">\\n\\t       <img class=\\\"img-fluid\\\" src=\\\"{{avatarService.getAvatar(review.author)}}\\\" />\\n        </div>\\n        <div class=\\\"col-8\\\">\\n            <blockquote class=\\\"blockquote\\\">\\n                <p class=\\\"mb-0\\\">{{review.body}}</p>\\n                <footer class=\\\"blockquote-footer\\\"><cite>{{review.author}}</cite></footer>\\n            </blockquote>\\n        </div>\\n        <div class=\\\"col-2\\\">\\n            <h1>{{review.rating}}</h1>\\n        </div>\\n    </div>\\n</div>\\n\\n<!--New Review-->\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-2\\\">\\n\\t   <img class=\\\"img-fluid\\\" src=\\\"https://2.gravatar.com/avatar/blank\\\" />\\n    </div>\\n    <div class=\\\"col-8\\\">\\n            <blockquote class=\\\"blockquote\\\">\\n                <p class=\\\"mb-0\\\">{{newReview.body}}</p>\\n                <footer class=\\\"blockquote-footer\\\"><cite>{{newReview.author}}</cite></footer>\\n            </blockquote>\\n    </div>\\n    <div class=\\\"col-2\\\">\\n            <h1>{{newReview.rating}}</h1>\\n    </div>\\n</div>\\n<form name = \\\"form\\\" (ngSubmit)=\\\"submitClicked(); reviewForm.reset()\\\" #reviewForm=\\\"ngForm\\\">\\n\\t<div *ngIf=\\\"reviewForm.invalid && email.touched && body.touched\\\" class=\\\"alert alert-danger\\\">\\n\\t\\t<ul>\\n            <li *ngIf=\\\"email.errors && email.errors.required\\\">\\n                Email is required.\\n            </li>\\n\\t\\t\\t<li *ngIf=\\\"email.errors && email.errors.pattern\\\">\\n                Email is not formatted correctly.\\n            </li>\\n\\t\\t\\t<li *ngIf=\\\"body.errors && body.errors.required\\\">\\n                Body is required and cannot exceed 400 characters.\\n            </li>\\n\\t\\t\\t<li *ngIf=\\\"rating.errors && rating.errors.required\\\">\\n                Rating is required.\\n            </li>\\n        </ul>\\n\\n\\n\\t</div>\\n <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input  class=\\\"form-control\\\" type=\\\"email\\\" placeholder=\\\"Enter your email\\\" name=\\\"email\\\" [(ngModel)]=\\\"newReview.author\\\" required pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" #email=\\\"ngModel\\\" [class.is-valid]=\\\"email.valid\\\" [class.is-invalid]=\\\"email.invalid && email.touched\\\" />\\n\\t\\t<div class=\\\"invalid-feedback\\\">\\n\\t\\t\\tEmail is required and needs to look like an email address.\\n\\t\\t</div>\\n\\n\\t</div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"body\\\">Review</label>\\n        <textarea class=\\\"form-control\\\" ng-maxlength=\\\"400\\\" placeholder=\\\"Enter your review\\\" name=\\\"body\\\" [(ngModel)]=\\\"newReview.body\\\" required #body=\\\"ngModel\\\" [class.is-valid]=\\\"body.valid\\\" [class.is-invalid]=\\\"body.invalid && body.touched\\\"></textarea>\\n\\t\\t<div class=\\\"invalid-feedback\\\">\\n\\t\\t\\tReview is required.\\n\\t\\t</div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"rating\\\">Rating</label>\\n        <select class=\\\"form-control\\\" name=\\\"rating\\\" [(ngModel)]=\\\"newReview.rating\\\" required #rating=\\\"ngModel\\\" [class.is-valid]=\\\"rating.valid\\\" [class.is-invalid]=\\\"rating.invalid && rating.touched\\\">\\n\\t\\t\\t<option></option>\\n            <option value=\\\"1\\\">1</option>\\n            <option value=\\\"2\\\">2</option>\\n            <option value=\\\"3\\\">3</option>\\n            <option value=\\\"4\\\">4</option>\\n            <option value=\\\"5\\\">5</option>\\n        </select>\\n\\t\\t<div class=\\\"invalid-feedback\\\">\\n\\t\\t\\tRating is required.\\n\\t\\t</div>\\n    </div>\\n    <input type=\\\"submit\\\" class=\\\"btn btn-default\\\" value=\\\"Submit Review\\\" [disabled]=\\\"reviewForm.invalid\\\" />\\n</form>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { BookModel } from '../book-model';\nimport { ReviewModel } from '../review-model';\n\n//import {HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AvatarService } from '../avatar.service';\n\n@Component({\n  selector: 'app-reviews',\n  templateUrl: './reviews.component.html',\n  styleUrls: ['./reviews.component.css']\n})\nexport class ReviewsComponent implements OnInit {\n\n    @Input()\n    book: BookModel;\n\n    newReview: ReviewModel;\n\n  constructor(private avatarService: AvatarService) { }\n\n  ngOnInit() {\n      this.newReview = {\n          id: -1,\n          createddate: \"\",\n          body: \"\",\n          rating: 5,\n          author: \"\"\n      }\n  }\n\n    submitClicked(){\n        if (!this.book.reviews) {\n            this.book.reviews = [];\n        }\n\n         //this.httpClient.post('http://localhost:62144/book/addreview', {body: this.newReview.body, author: this.newReview.author, rating: this.newReview.rating}).subscribe((x) => {console.log(x)});\n\n        this.book.reviews.push(this.newReview);\n        this.ngOnInit();\n        }\n}\n","module.exports = \"\"","module.exports = \"<ul class=\\\"nav nav-pills btn btn-sm\\\" style=\\\"justify-content: center\\\">\\n\\t<li class=\\\"nav-item\\\">\\n\\t\\t<a class=\\\"nav-link\\\" href=\\\"#\\\" (click)=\\\"setTab(1)\\\" [class.active] =\\\"tab ===1\\\">Description</a>\\n\\t</li>\\n\\t<li class=\\\"nav-item\\\">\\n\\t\\t<a class=\\\"nav-link\\\" href=\\\"#\\\" (click)=\\\"setTab(2)\\\" [class.active] =\\\"tab ===2\\\">Reviews</a>\\n\\t</li>\\n</ul>\\n<div *ngIf=\\\"tab === 1\\\">\\n\\t<p class=\\\"card-text\\\">{{book.description}}</p>\\n</div>\\n<div *ngIf=\\\"tab === 2\\\">\\n    <app-reviews [book]=\\\"book\\\"></app-reviews>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { BookModel } from '../book-model';\n\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: './tabs.component.html',\n  styleUrls: ['./tabs.component.css']\n})\nexport class TabsComponent implements OnInit {\n\n    @Input()\n    book: BookModel;\n\n    tab: number;\n    constructor() { }\n    ngOnInit() {\n        this.tab =1;\n  }\n    setTab(selectedTab: number) {\n        this.tab = selectedTab;\n        return false;\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'wave'\n})\nexport class WavePipe implements PipeTransform {\n\n  transform(value: string, args?: any): any {\n      var result: string;\n      result = '';\n      for(var i = 0; i < value.length; i++){\n          if(i % 2 == 0){\n              result = result.concat(value[i].toUpperCase());\n          } else {\n              result = result.concat(value[i].toLowerCase());\n          }\n      }\n    return result;\n  }\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}